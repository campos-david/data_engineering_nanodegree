# This is our first Apache Cassandra queries using the language CQL which means Cassandra Query Language. Here-ll create some tables and them do some queries extracting insights from those tables.

# Again, we-ll work with CQL but in a Python environment, using Python language.

import cassandra

#So first of all you need to create a cluster and a keyspace, keyspace means schema.
  
from cassandra.cluster import Cluster

cluster = Cluster(['127.0.0.1']) #If you have a locally installed Apache Cassandra instance
session = cluster.connect()

session.execute("""
    CREATE KEYSPACE IF NOT EXISTS udacity 
    WITH REPLICATION = 
    { 'class' : 'SimpleStrategy', 'replication_factor' : 1 }"""
)

# Connect to the keyspace

session.set_keyspace('udacity')

# Now creating the tables with some DDL language inside CQL

query = "CREATE TABLE IF NOT EXISTS music_library"
query = query + "(year int, artist_name text, album_name text, PRIMARY KEY (year, artist_name))"
session.execute(query)

query = "CREATE TABLE IF NOT EXISTS artist_library"
query = query + "(artist_name text, year int, album_name text, PRIMARY KEY (artist_name, year))"
session.execute(query)

query = "CREATE TABLE IF NOT EXISTS album_library"
query = query + "(album_name text, artist_name text, year int, PRIMARY KEY (album_name, artist_name))"
session.execute(query)

query = "INSERT INTO music_library (year, artist_name, album_name)"
query = query + " VALUES (%s, %s, %s)"

query1 = "INSERT INTO artist_library (artist_name, year, album_name)"
query1 = query1 + " VALUES (%s, %s, %s)"

query2 = "INSERT INTO album_library (album_name, artist_name, year)"
query2 = query2 + " VALUES (%s, %s, %s)"

session.execute(query, (1970, "The Beatles", "Let It Be"))
session.execute(query, (1965, "The Beatles", "Rubber Soul"))
session.execute(query, (1965, "The Who", "My Generation"))
session.execute(query, (1966, "The Monkees", "The Monkees"))
session.execute(query, (1970, "The Carpenters", "Close To You"))

session.execute(query1, ("The Beatles", 1970, "Let It Be"))
session.execute(query1, ("The Beatles", 1965, "Rubber Soul"))
session.execute(query1, ("The Who", 1965, "My Generation"))
session.execute(query1, ("The Monkees", 1966, "The Monkees"))
session.execute(query1, ("The Carpenters", 1970, "Close To You"))

session.execute(query2, ("Let it Be", "The Beatles", 1970))
session.execute(query2, ("Rubber Soul", "The Beatles", 1965))
session.execute(query2, ("My Generation", "The Who", 1965))
session.execute(query2, ("The Monkees", "The Monkees", 1966))
session.execute(query2, ("Close To You", "The Carpenters", 1970))

# Now answering some business questions

# Query #1: Give every album in the music library that was released in a given year.

query = "SELECT * FROM music_library WHERE year=1970"

rows = session.execute(query)
for row in rows:
    print (row.year, row.artist_name, row.album_name)

# Query #2: Give every album in the music library that was created by a given artist.

query = "SELECT * FROM artist_library WHERE artist_name='The Beatles'"

rows = session.execute(query)
for row in rows:
    print (row.artist_name, row.year, row.album_name)

# Query #3: Give all the information from the music library about a given album.

query = "SELECT * FROM album_library WHERE album_name='Close To You'"

rows = session.execute(query)
for row in rows:
    print (row.album_name, row.year, row.artist_name)

# The key here is to identify the columns that will compose the COMPOSITE KEY, which one is the partition key and which one is the clustering key, then use the right table to the right query.

# Finally, closing the session and the cluster in the cassandra library, as in psycopg2.

session.shutdown()
cluster.shutdown()
